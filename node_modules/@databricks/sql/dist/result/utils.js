"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertThriftValue = exports.getSchemaColumns = void 0;
const node_int64_1 = __importDefault(require("node-int64"));
const TCLIService_types_1 = require("../../thrift/TCLIService_types");
function getSchemaColumns(schema) {
    if (!schema) {
        return [];
    }
    return [...schema.columns].sort((c1, c2) => c1.position - c2.position);
}
exports.getSchemaColumns = getSchemaColumns;
function isString(value) {
    return typeof value === 'string' || value instanceof String;
}
function convertJSON(value, defaultValue) {
    if (!isString(value)) {
        return value;
    }
    try {
        return JSON.parse(value);
    }
    catch (e) {
        return defaultValue;
    }
}
function convertBigInt(value) {
    if (typeof value === 'bigint') {
        return Number(value);
    }
    if (value instanceof node_int64_1.default) {
        return value.toNumber();
    }
    return value;
}
function convertThriftValue(typeDescriptor, value) {
    if (!typeDescriptor) {
        return value;
    }
    switch (typeDescriptor.type) {
        case TCLIService_types_1.TTypeId.DATE_TYPE:
        case TCLIService_types_1.TTypeId.TIMESTAMP_TYPE:
            return value;
        case TCLIService_types_1.TTypeId.UNION_TYPE:
        case TCLIService_types_1.TTypeId.USER_DEFINED_TYPE:
            return String(value);
        case TCLIService_types_1.TTypeId.DECIMAL_TYPE:
            return Number(value);
        case TCLIService_types_1.TTypeId.STRUCT_TYPE:
        case TCLIService_types_1.TTypeId.MAP_TYPE:
            return convertJSON(value, {});
        case TCLIService_types_1.TTypeId.ARRAY_TYPE:
            return convertJSON(value, []);
        case TCLIService_types_1.TTypeId.BIGINT_TYPE:
            return convertBigInt(value);
        case TCLIService_types_1.TTypeId.NULL_TYPE:
        case TCLIService_types_1.TTypeId.BINARY_TYPE:
        case TCLIService_types_1.TTypeId.INTERVAL_YEAR_MONTH_TYPE:
        case TCLIService_types_1.TTypeId.INTERVAL_DAY_TIME_TYPE:
        case TCLIService_types_1.TTypeId.FLOAT_TYPE:
        case TCLIService_types_1.TTypeId.DOUBLE_TYPE:
        case TCLIService_types_1.TTypeId.INT_TYPE:
        case TCLIService_types_1.TTypeId.SMALLINT_TYPE:
        case TCLIService_types_1.TTypeId.TINYINT_TYPE:
        case TCLIService_types_1.TTypeId.BOOLEAN_TYPE:
        case TCLIService_types_1.TTypeId.STRING_TYPE:
        case TCLIService_types_1.TTypeId.CHAR_TYPE:
        case TCLIService_types_1.TTypeId.VARCHAR_TYPE:
        default:
            return value;
    }
}
exports.convertThriftValue = convertThriftValue;
//# sourceMappingURL=utils.js.map